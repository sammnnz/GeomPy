name: Tests

on:
   workflow_call:
     inputs:
       ref:
         required: false
         type: string
         default: ${{github.ref_name}}
       os:
         required: true
         type: string
       py:
         required: true
         type: string
       lint:
         required: false
         type: string
         default: 'false'
       typecheck:
         required: false
         type: string
         default: 'false'
       codecov:
         required: false
         type: string
         default: 'false'
       cov-json:
         required: false
         type: string
         default: 'false'
     secrets:
       token:
         required: true
       # https://giters.com/codecov/codecov-action/issues/1738
       codecov_token:
         required: false

jobs:
  pre:
    runs-on: ubuntu-latest
    steps:
      - name: Parse ref
        run: |
          if [ ${{github.event_name}} == 'pull_request' ]; then
            echo "CURRENTREF=${{github.event.pull_request.head.ref}}" >> $GITHUB_ENV
          else
            echo "CURRENTREF=${{inputs.ref}}" >> $GITHUB_ENV
          fi
  tests:
    runs-on: ${{inputs.os}}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: sammnnz/geompy
          ref: ${{env.CURRENTREF}}
      - name: Setup Python ${{inputs.py}}
        uses: actions/setup-python@v2
        with:
          python-version: ${{inputs.py}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[testing,linting,typechecking]
      - name: Test with pytest
        run: |
          pytest --cov-config=.coveragerc --verbose --color=yes --assert=plain
      - name: Create coverage report in xml for codecov
        if: ${{inputs.codecov == 'true'}}
        run: |
          coverage xml -o coverage.xml
      - name: Upload coverage report (xml) artefact
        if: ${{inputs.codecov == 'true'}}
        uses: actions/upload-artifact@v4
        with:
          name: geompy-codecov-${{inputs.os}}-py${{inputs.py}}
          overwrite: true
          path: coverage.xml
      - name: Create coverage report in json
        if: ${{inputs.cov-json == 'true'}}
        run: |
          coverage json -o coverage.json
        shell: bash
      - name: Parse json
        continue-on-error: true
        if: ${{inputs.cov-json == 'true'}}
        # https://jqlang.org/download/
        run: |
          if [[ ${{inputs.os}} =~ ^windows.* ]]; then
            winget install jqlang.jq
          elif [[ ${{inputs.os}} =~ ^ubuntu.* ]]; then
            sudo apt-get install jq
          elif [[ ${{inputs.os}} =~ ^mac.* ]]; then
            brew install jq
          fi
          
          jq ".totals" coverage.json >> cov-${{inputs.os}}-py${{inputs.py}}.json
      - name: Upload coverage report (json) artefact
        if: ${{inputs.cov-json == 'true'}}
        uses: actions/upload-artifact@v4
        with:
          name: geompy-cov-${{inputs.os}}-py${{inputs.py}}
          overwrite: true
          path: cov-${{inputs.os}}-py${{inputs.py}}.json
      - name: Linter
        if: ${{inputs.lint == 'true'}}
        run: |
          flake8 src tests
      - name: Type-checker
        if: ${{inputs.typecheck == 'true'}}
        run: |
          mypy src

  codecov:
    if: ${{inputs.codecov == 'true'}}
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage artefact
        uses: actions/download-artifact@v4.1.8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          merge-multiple: true
          name: geompy-codecov-${{inputs.os}}-py${{inputs.py}}
          path: .temp/
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: false
          file: .temp/coverage.xml
          flags: py${{inputs.py}}
          name: tests
          # https://docs.codecov.com/docs/commit-status#disabling-a-status
          token: ${{ secrets.codecov_token }}
          verbose: true
      - name: Delete coverage artefact
        uses: geekyeggo/delete-artifact@v5
        with:
          failOnError: false
          name: |
            geompy-codecov-${{inputs.os}}-py${{inputs.py}}